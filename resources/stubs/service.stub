<?php

namespace {{namespace}};

class {{classname}}
{
    protected $repository;

    public function __construct(ExampleContract ${{variable}}Repository)
    {
        $this->repository = ${{variable}}Repository;
    }

    protected function payload($request)
    {
        $payloads = [
            'name' => $request['name'],
        ];

        return $payloads;
    }

    public function indexService(array $request)
    {
        ${{pluralVariable}} = $this->repository->indexSearch($request);

        return ExampleResource::collection(${{pluralVariable}});
    }

    public function findService($id)
    {
        ${{variable}} = $this->repository->find($id);

        return new ExampleResource(${{variable}});
    }

    public function storeService(array $request)
    {
        $inputData = $this->payload($request);

        ${{variable}} = $this->repository->store($inputData);

        return new ExampleResource(${{variable}});
    }

    public function updateService(array $request, $id)
    {
        $inputData = $this->payload($request);

        $this->repository->update($inputData, $id);

        return $this->findService($id);
    }

    public function deleteService($id)
    {
        $this->repository->delete($id);
    }
}
