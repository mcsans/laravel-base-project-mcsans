<?php

namespace {{namespace}};

use App\Http\Repositories\BaseRepository;
use {{contractNamespace}};
use {{modelNamespace}};

class {{classname}} extends BaseRepository implements {{contract}}
{
    protected ${{variable}};

    public function __construct({{model}} ${{variable}})
    {
        parent::__construct(${{variable}});
        $this->{{variable}} = ${{variable}};
    }

    public function indexSearch(array $request)
    {
        $per_page = $request['per_page'] ?? config('default.pagination.per_page');
        $sort_by = $request['sort_by'] ?? config('default.sort.by');
        $sort_direction = $request['sort_direction'] ?? config('default.sort.direction');
        $search = $request['search'] ?? null;

        $query = $this->{{variable}}
            ->orderBy($sort_by, $sort_direction);

        if ($search) {
            $query->where(function ($q) use ($search) {
                $q->where('id', 'LIKE', '%' . $search . '%')
                    ->orWhere('name', 'LIKE', '%' . $search . '%')
                    ->orWhere('created_at', 'LIKE', '%' . $search . '%');
            });
        }

        return $query->paginate($per_page);
    }
}
